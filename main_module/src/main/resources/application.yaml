spring:
  application:
    name: internet_shop_project

  r2dbc:
    url: r2dbc:postgresql://localhost:5432/shop_db_v4
    username: postgres
    password: postgres

  flyway:
    enabled: true
    baseline-on-migrate: true
    locations: classpath:db/migration
    url: jdbc:postgresql://localhost:5432/shop_db_v4
    password: postgres
    user: postgres
    driver-class-name: org.postgresql.Driver

  thymeleaf:
    encoding: UTF-8
    mode: HTML

  payment-service-address: ${PAYMENT_SERVICE_URL:http://localhost:8081}

  data:
    redis:
      host: ${SPRING_REDIS_HOST:localhost}
      port: ${SPRING_REDIS_PORT:6379}

  cache-ttl: 3

  security:
    oauth2:
      client:
        provider:
          keycloak:
            user-name-attribute: sub
            authorization-uri: http://localhost:8080/realms/internet-shop/protocol/openid-connect/auth
            token-uri: http://localhost:8080/realms/internet-shop/protocol/openid-connect/token
            user-info-uri: http://localhost:8080/realms/internet-shop/protocol/openid-connect/userinfo
            jwk-set-uri: http://localhost:8080/realms/internet-shop/protocol/openid-connect/certs
            issuer-uri: http://localhost:8080/realms/internet-shop
        registration:
          keycloak:
            authorizationGrantType: authorization_code
            provider: keycloak
            client-id: main_module
            client-secret: KFEgqu1CIlMNc2EsLhupNHSIsjwMefpA
            redirect-uri: '{baseUrl}/{action}/oauth2/code/{registrationId}'
            scope: openid, profile, email
          payment-service-client: # Описание клиента OAuth2
            authorizationGrantType: client_credentials
            provider: keycloak
            client-id: main_module_m2m
            client-secret: FqMhe3sOQGdtsYDg9m8FPe9OFjSURjgj
            scope: openid, profile
            clientAuthenticationMethod: client_secret_post # Способ передачи секрета

server:
  port: 8082